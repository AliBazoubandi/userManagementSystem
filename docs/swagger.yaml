definitions:
  controller.UpdateUserRequest:
    properties:
      age:
        type: integer
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  db.CreateUserParams:
    properties:
      age:
        $ref: '#/definitions/pgtype.Int4'
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  db.User:
    properties:
      age:
        $ref: '#/definitions/pgtype.Int4'
      created_at:
        $ref: '#/definitions/pgtype.Timestamp'
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
  gin.H:
    additionalProperties: {}
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Int4:
    properties:
      int32:
        type: integer
      valid:
        type: boolean
    type: object
  pgtype.Timestamp:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        description: Time zone will be ignored when encoding to PostgreSQL.
        type: string
      valid:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve all users from the database
      produces:
      - application/json
      responses:
        "200":
          description: List of Users
          schema:
            items:
              $ref: '#/definitions/db.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user by providing the required parameters in the request
        body
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/db.CreateUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: Created User
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted User
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieve a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User Information
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the user's details such as username, email, password, and
        age
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controller.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated User
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a user's information
      tags:
      - users
swagger: "2.0"
