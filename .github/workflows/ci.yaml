# This workflow will build a golang project
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          check-latest: false
          cache: true
          cache-dependency-path: |
            **/go.sum
            **/go.mod

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.txt
          version: "v0.1.15"
          # because we dont have secret key for codeconv for now we commented this
#          fail_ci_if_error: true

      # - name: Run security check
      #   run: |
      #     go install github.com/securego/gosec/v2/cmd/gosec@latest
      #     gosec ./...
      - name: Run security check
        run: |
          echo "Skipping health check (no health endpoint available)."
#      - name: Run dependency check
#        run: |
#          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
#          golangci-lint run --enable=goimports ./...
      - name: Run dependency check
        run: |
          echo "Skipping dependency check for now because we didnt use that in our project"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose (Official)
        run: |
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
          chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
          docker compose version

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: my-backend-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Start services with Docker Compose
        run: |
          docker compose up -d --build
          echo "Waiting for services to start..."
          sleep 60  # Increase waiting time for better stability
          docker compose ps  # Check container status
          docker logs backend_container  # Print logs for debugging

      - name: Health check
        run: |
          echo "Skipping health check (no health endpoint available)."
